name: CD - Deploy Microservices

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - micro-digiservices/**
      - '!micro-digiservices/frontend/**'

env:
  REGISTRY: doukoure93 # Ton DockerHub username

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # ====== Build & push chaque microservice ======
      - name: Build & push userservice
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/userservice
          file: ./micro-digiservices/userservice/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/userservice:latest

      - name: Build & push authorizationserver
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/authorizationserver
          file: ./micro-digiservices/authorizationserver/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/authorizationserver:latest

      - name: Build & push ecreditservice
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/ecreditservice
          file: ./micro-digiservices/ecreditservice/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/ecreditservice:latest

      - name: Build & push notificationservice
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/notificationservice
          file: ./micro-digiservices/notificationservice/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/notificationservice:latest

      - name: Build & push gateway
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/gateway
          file: ./micro-digiservices/gateway/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/gateway:latest

      - name: Build & push discoveryserver
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/discoveryserver
          file: ./micro-digiservices/discoveryserver/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/discoveryserver:latest

      - name: Build & push ebankingservice
        uses: docker/build-push-action@v5
        with:
          context: ./micro-digiservices/ebankingservice
          file: ./micro-digiservices/ebankingservice/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/ebanking:latest

      # === Ajoute d'autres services ici si besoin ===

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Deploy on VPS (SSH)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_SSH_KEY }}
          port: ${{ secrets.PROD_PORT || 22 }}
          script: |
            set -e
            cd ~/microservices

            echo "Pulling all images..."
            docker pull doukoure93/userservice:latest
            docker pull doukoure93/authorizationserver:latest
            docker pull doukoure93/ecreditservice:latest
            docker pull doukoure93/notificationservice:latest
            docker pull doukoure93/gateway:latest
            docker pull doukoure93/discoveryserver:latest
            docker pull doukoure93/ebanking:latest

            echo "Stop stack"
            docker compose --env-file .env.prod down
            sleep 5

            echo "Force stop all containers (clean slate)..."
            docker kill $(docker ps -q) || true
            docker rm $(docker ps -a -q) || true

            echo "Remove ALL unused networks..."
            docker network prune -f

            echo "DB migrations"
            docker compose --env-file .env.prod --profile migration up flyway-migrations

            echo "Start stack"
            docker compose --env-file .env.prod up -d

            echo "Deployment done! ðŸš€"
